name: Build & Deploy Operator
'on':
  push:
    branches:
      - main
      - developer
      - dev-miguel
  workflow_dispatch: null
env:
  AWS_REGION: '${{ secrets.AWS_REGION }}'
  ACCOUNT_ID: '${{ secrets.ECR_ACCOUNT_ID }}'
  REGISTRY: >-
    ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION
    }}.amazonaws.com
  IMAGE_NAME: aws-search
jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: '${{ secrets.AWS_REGION }}'
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build image
        run: >
          docker build -t $REGISTRY/$IMAGE_NAME:latest .

          docker tag $REGISTRY/$IMAGE_NAME:latest $REGISTRY/$IMAGE_NAME:${{
          github.sha }}
      - name: Push image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:latest
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}
      - name: Deploy (pull & restart only this service)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: '${{ secrets.EC2_HOST }}'
          username: '${{ secrets.EC2_USER }}'
          key: '${{ secrets.SSH_PRIVATE_KEY }}'
          envs: 'REGISTRY,IMAGE_NAME'
          script: >
            cd /opt/microservices

            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} |
            docker login --username AWS --password-stdin $REGISTRY

            docker compose pull $IMAGE_NAME

            docker compose up -d $IMAGE_NAME

            docker image prune -f
